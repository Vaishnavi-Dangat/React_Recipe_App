{"version":3,"sources":["components/ReceipeDetails.js","components/Receipe.jsx","components/Alert.js","App.js","index.js"],"names":["ReceipeDetails","ingredients","map","ingredient","className","text","weight","uuidv4","Receipe","recipe","useState","show","setShow","label","image","url","src","alt","href","target","rel","onClick","Alert","alert","App","query","setQuery","recipes","setReceipes","setAlert","getData","a","Axios","get","result","data","more","hits","console","log","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","value","ReactDOM","render","document","getElementById"],"mappings":"0NAeeA,EAZQ,SAAC,GACpB,OADsC,EAAjBC,YACFC,KAAI,SAAAC,GACnB,OACI,qBAAoBC,UAAU,kBAA9B,UACC,qBAAIA,UAAU,kBAAd,cAAkCD,EAAWE,QAC7C,qBAAID,UAAU,oBAAd,uBAA6CD,EAAWG,OAAxD,SAFQC,mBCgBNC,EAnBC,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEd,EAAsBC,oBAAS,GAA/B,mBAAMC,EAAN,KAAWC,EAAX,KAEA,EAAoCH,EAAOA,OAArCI,EAAN,EAAMA,MAAMC,EAAZ,EAAYA,MAAMC,EAAlB,EAAkBA,IAAId,EAAtB,EAAsBA,YACtB,OACI,sBAAKG,UAAU,SAAf,UACG,6BAAKS,IACL,qBAAKG,IAAKF,EAAOG,IAAKJ,IACtB,mBAAGK,KAAMH,EAAKI,OAAO,SACrBC,IAAI,sBADJ,iBAIA,wBAAQC,QAAS,kBAAIT,GAASD,IAA9B,0BACEA,GAAQ,cAAC,EAAD,CAAgBV,YAAaA,QCPnCqB,EARD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACZ,OACI,qBAAKnB,UAAU,QAAf,SACI,6BAAKmB,OC0DFC,G,MAxDH,WACN,MAAwBd,mBAAS,IAAjC,mBAAMe,EAAN,KAAYC,EAAZ,KACA,EAA6BhB,mBAAS,IAAtC,mBAAMiB,EAAN,KAAcC,EAAd,KACA,EAAsBlB,mBAAS,IAA/B,mBAAMa,EAAN,KAAYM,EAAZ,KAMEd,EAAG,0CAAqCU,EAArC,mBAJM,WAIN,oBAFO,oCAIVK,EAAO,uCAAG,4BAAAC,EAAA,yDACD,KAAVN,EADW,iCAEOO,IAAMC,IAAIlB,GAFjB,WAERmB,EAFQ,QAGHC,KAAKC,KAHF,yCAILP,EAAS,2BAJJ,OAMdD,EAAYM,EAAOC,KAAKE,MACxBC,QAAQC,IAAIL,GACZL,EAAS,IACTH,EAAS,IATK,wBAWZG,EAAS,wBAXG,4CAAH,qDAwBb,OACE,sBAAKzB,UAAU,MAAf,UACE,oBAAIiB,QAASS,EAAb,gCACA,uBAAM1B,UAAU,cAAcoC,SARjB,SAACC,GAChBA,EAAEC,iBACFZ,KAME,UACW,KAAVP,GAAgB,cAAC,EAAD,CAAOA,MAAOA,IAC7B,uBACOoB,KAAO,OACPC,YAAa,cACbC,aAAa,MACbC,SAlBI,SAACL,GACdf,EAASe,EAAEtB,OAAO4B,QAkBTA,MAAOtB,IAEd,uBAAOkB,KAAK,SAASI,MAAM,cAE7B,qBAAK3C,UAAU,UAAf,SACGuB,IAAW,IAAMA,EAAQzB,KAAI,SAAAO,GAAM,OAAG,cAAC,EAAD,CAAwBA,OAAQA,GAAlBF,yBCrD7DyC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.b3589497.chunk.js","sourcesContent":["import React from 'react';\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nconst ReceipeDetails = ({ingredients}) => {\r\n    return ingredients.map(ingredient =>{\r\n        return(\r\n            <ul key={uuidv4()}  className=\"ingredient-list\">\r\n             <li className=\"ingredient-text\"> {ingredient.text}</li>\r\n             <li className=\"ingredient-weight\"> Weight - {ingredient.weight} </li>\r\n            </ul>\r\n\r\n        )\r\n    });\r\n};\r\n\r\nexport default ReceipeDetails;\r\n","import React,{useState} from 'react';\r\nimport ReceipeDetails  from './ReceipeDetails';\r\n\r\nconst Receipe = ({recipe}) => {\r\n\r\n    const[show,setShow] = useState(false);\r\n\r\n    const{label,image,url,ingredients}= recipe.recipe;\r\n    return (\r\n        <div className=\"recipe\">\r\n           <h2>{label}</h2>\r\n           <img src={image} alt={label} />\r\n           <a href={url} target=\"_blank\" \r\n           rel=\"noopener noreferrer\">\r\n            URL\r\n           </a>\r\n           <button onClick={()=>setShow(!show)}> Ingredients</button>\r\n           { show && <ReceipeDetails ingredients={ingredients}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Receipe;\r\n","import React from 'react';\r\n\r\nconst Alert = ({alert}) => {\r\n    return (\r\n        <div className=\"alert\">\r\n            <h3>{alert}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Alert;\r\n","import React,{useState} from \"react\";\nimport Axios from \"axios\";\nimport {v4 as uuidv4} from \"uuid\";\nimport Receipe from \"./components/Receipe\";\nimport Alert from \"./components/Alert\";\nimport \"./App.css\";\n\nconst App = () => {\n      const[query,setQuery] = useState(\"\");\n      const[recipes,setReceipes] = useState([]);\n      const[alert,setAlert]=useState(\"\");\n\n  const APP_ID = \"2f6f5873\";\n\n  const APP_KEY = \"af3efdd5d2da8daa05e2fcc6d170b05a\";\n\n  const url =`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  const getData = async () =>{\n    if(query !== \"\"){\n    const result = await Axios.get(url);\n    if(!result.data.more){\n      return setAlert(\"No food with such name\");\n    }\n    setReceipes(result.data.hits);\n    console.log(result);\n    setAlert(\"\")\n    setQuery(\"\");\n    }else{\n      setAlert(\"please fill the form\");\n    }\n  };\n\n  const onChange = (e) =>{\n      setQuery(e.target.value);\n  };\n\n  const onSubmit = (e) =>{\n    e.preventDefault();\n    getData();\n  };\n  \n  return (\n    <div className=\"App\">\n      <h1 onClick={getData}>Food Searching App</h1>\n      <form className=\"search-form\" onSubmit={onSubmit}>\n      {alert !== \"\" && <Alert alert={alert}/>}\n        <input \n               type = \"text\"\n               placeholder =\"search food\" \n               autoComplete=\"off\"\n               onChange ={onChange}\n               value={query}\n         />\n        <input type=\"submit\" value=\"Search\"/>\n      </form>\n      <div className=\"recipes\">\n        {recipes !==[] && recipes.map(recipe =><Receipe key={uuidv4()} recipe={recipe}/>)}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}